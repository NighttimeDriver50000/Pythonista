##	Generated by Christopher McKinney's y86c
	.pos	0
	irmovl	Stack, %esp
	irmovl	Stack, %ebp
	call	main
	halt

##	.file	"examples.c"
##	.text
##	.p2align 4,,15
##	.globl	sum_list
##	.type	sum_list, @function
sum_list:
	mrmovl	4(%esp), %edx
	xorl	%eax, %eax
	rmmovl	%edx, TmpReg1
	andl	%edx, %edx
	mrmovl	TmpReg1, %edx
	je	L__L2
##	.p2align 4,,7
##	.p2align 3
L__L3:
	rmmovl	%ecx, TmpReg1
	mrmovl	(%edx), %ecx
	addl	%ecx, %eax
	mrmovl	TmpReg1, %ecx
	mrmovl	4(%edx), %edx
	rmmovl	%edx, TmpReg1
	andl	%edx, %edx
	mrmovl	TmpReg1, %edx
	jne	L__L3
L__L2:
	ret
##	.size	sum_list, .-sum_list
##	.p2align 4,,15
##	.globl	rsum_list
##	.type	rsum_list, @function
rsum_list:
	mrmovl	4(%esp), %edx
	xorl	%eax, %eax
	rmmovl	%edx, TmpReg1
	andl	%edx, %edx
	mrmovl	TmpReg1, %edx
	je	L__L8
##	.p2align 4,,7
##	.p2align 3
L__L9:
	mrmovl	(%edx), %ecx
	mrmovl	4(%edx), %edx
	addl	%ecx, %eax
	rmmovl	%edx, TmpReg1
	andl	%edx, %edx
	mrmovl	TmpReg1, %edx
	jne	L__L9
L__L8:
	ret
##	.size	rsum_list, .-rsum_list
##	.p2align 4,,15
##	.globl	copy_block
##	.type	copy_block, @function
copy_block:
	pushl	%esi
	xorl	%eax, %eax
	pushl	%ebx
	mrmovl	20(%esp), %edx
	mrmovl	12(%esp), %ebx
	mrmovl	16(%esp), %ecx
	rmmovl	%edx, TmpReg1
	andl	%edx, %edx
	mrmovl	TmpReg1, %edx
	jle	L__L13
##	.p2align 4,,7
##	.p2align 3
L__L14:
	mrmovl	(%ebx), %esi
	rmmovl	%eax, TmpReg1
	irmovl	$4, %eax
	addl	%eax, %ebx
	mrmovl	TmpReg1, %eax
	rmmovl	%esi, (%ecx)
	xorl	%esi, %eax
	rmmovl	%eax, TmpReg1
	irmovl	$4, %eax
	addl	%eax, %ecx
	mrmovl	TmpReg1, %eax
	rmmovl	%eax, TmpReg1
	irmovl	$1, %eax
	subl	%eax, %edx
	mrmovl	TmpReg1, %eax
	jne	L__L14
L__L13:
	popl	%ebx
	popl	%esi
	ret
##	.size	copy_block, .-copy_block
##	.section	.text.startup,"ax",@progbits
##	.p2align 4,,15
##	.globl	main
##	.type	main, @function
main:
	mrmovl	list, %eax
	xorl	%edx, %edx
	rmmovl	%eax, TmpReg1
	andl	%eax, %eax
	mrmovl	TmpReg1, %eax
	je	L__L18
##	.p2align 4,,7
##	.p2align 3
L__L19:
	rmmovl	%ecx, TmpReg1
	mrmovl	(%eax), %ecx
	addl	%ecx, %edx
	mrmovl	TmpReg1, %ecx
	mrmovl	4(%eax), %eax
	rmmovl	%eax, TmpReg1
	andl	%eax, %eax
	mrmovl	TmpReg1, %eax
	jne	L__L19
L__L18:
	rmmovl	%edx, thesum
	xorl	%eax, %eax
	ret
##	.size	main, .-main
##	.globl	list
##	.data
	.align 4
##	.type	list, @object
##	.size	list, 4
list:
	.long	ele1
##	.globl	ele1
	.align 4
##	.type	ele1, @object
##	.size	ele1, 8
ele1:
	.long	10
	.long	ele2
##	.globl	ele2
	.align 4
##	.type	ele2, @object
##	.size	ele2, 8
ele2:
	.long	176
	.long	ele3
##	.globl	ele3
	.align 4
##	.type	ele3, @object
##	.size	ele3, 8
ele3:
	.long	3072
	.long	0
##	.globl	thesum
	.align 4
##	.type	thesum, @object
##	.size	thesum, 4
thesum:
	.long	-1
##	.ident	"GCC: (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3"
##	.section	.note.GNU-stack,"",@progbits

	.align	4
TmpReg1:
	.long	0

	.pos	0x1000
Stack:
